spring.application.name=banking
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/banking
spring.datasource.username=root
spring.datasource.password=Bora?4161
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
exchangeRateApi.key=e042a8ac55180dd803e81878
exchangeRateApi.url=https://v6.exchangerate-api.com/v6
spring.security.oauth2.client.registration.banking_app.client-id=banking_app
spring.security.oauth2.client.registration.banking_app.client-secret=A8JAOIwRAKr7fFbuCA8fpCIH3bagBhap
spring.security.oauth2.client.registration.banking_app.provider=keycloak
spring.security.oauth2.client.registration.banking_app.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.banking_app.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.banking_app.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/realms/banking
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/realms/banking/protocol/openid-connect/certs
# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=2000ms
spring.data.redis.password=
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1ms
spring.data.redis.lettuce.shutdown-timeout=100ms
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false
spring.cache.redis.use-key-prefix=true
spring.cache.redis.key-prefix=bank-app:
spring.data.redis.connect-timeout=2000ms
spring.data.redis.command-timeout=5000ms
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=main-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.banking.dto.shared,com.example.KafkaTest.dto.shared


